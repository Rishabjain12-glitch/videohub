# youtube_auth/settings.py
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'your-secret-key-change-in-production'

DEBUG = True

ALLOWED_HOSTS = []

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'youtube_auth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'youtube_auth.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Backend for simulated verification
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Login/Logout redirect URLs
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'dashboard'
LOGOUT_REDIRECT_URL = 'login'

# ============================================================================
# youtube_auth/urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('accounts.urls')),
]

# ============================================================================
# accounts/models.py
from django.db import models
from django.contrib.auth.models import User
import uuid

class UserProfile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    email_verified = models.BooleanField(default=False)
    verification_token = models.CharField(max_length=100, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.user.username}'s Profile"

    def save(self, *args, **kwargs):
        if not self.verification_token:
            self.verification_token = str(uuid.uuid4())
        super().save(*args, **kwargs)

class Video(models.Model):
    title = models.CharField(max_length=200)
    description = models.TextField(blank=True)
    uploader = models.ForeignKey(User, on_delete=models.CASCADE, related_name='videos')
    upload_date = models.DateTimeField(auto_now_add=True)
    views = models.PositiveIntegerField(default=0)
    likes = models.PositiveIntegerField(default=0)
    dislikes = models.PositiveIntegerField(default=0)
    
    class Meta:
        ordering = ['-upload_date']
    
    def __str__(self):
        return self.title

# ============================================================================
# accounts/admin.py
from django.contrib import admin
from django.contrib.auth.admin import UserAdmin
from django.contrib.auth.models import User
from .models import UserProfile, Video

# Customize the admin interface
admin.site.site_header = "YouTube Clone Admin"
admin.site.site_title = "YouTube Clone Admin Portal"
admin.site.index_title = "Welcome to YouTube Clone Administration"

class UserProfileInline(admin.StackedInline):
    model = UserProfile
    can_delete = False
    verbose_name_plural = 'Profile'
    fields = ('email_verified', 'verification_token', 'created_at', 'updated_at')
    readonly_fields = ('verification_token', 'created_at', 'updated_at')

class CustomUserAdmin(UserAdmin):
    inlines = (UserProfileInline,)
    list_display = ('username', 'email', 'first_name', 'last_name', 'is_staff', 'get_email_verified')
    list_filter = ('is_staff', 'is_superuser', 'is_active', 'date_joined')
    search_fields = ('username', 'email', 'first_name', 'last_name')
    ordering = ('-date_joined',)
    
    def get_email_verified(self, obj):
        try:
            return obj.userprofile.email_verified
        except UserProfile.DoesNotExist:
            return False
    get_email_verified.short_description = 'Email Verified'
    get_email_verified.boolean = True

@admin.register(Video)
class VideoAdmin(admin.ModelAdmin):
    list_display = ('title', 'uploader', 'upload_date', 'views', 'likes', 'dislikes')
    list_filter = ('upload_date', 'uploader')
    search_fields = ('title', 'description', 'uploader__username')
    ordering = ('-upload_date',)
    readonly_fields = ('upload_date',)
    
    fieldsets = (
        ('Video Information', {
            'fields': ('title', 'description', 'uploader')
        }),
        ('Statistics', {
            'fields': ('views', 'likes', 'dislikes', 'upload_date'),
            'classes': ('collapse',)
        }),
    )

# Re-register UserAdmin
admin.site.unregister(User)
admin.site.register(User, CustomUserAdmin)

# ============================================================================
# accounts/forms.py
from django import forms
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.models import User
from django.core.exceptions import ValidationError

class CustomUserCreationForm(UserCreationForm):
    email = forms.EmailField(required=True)
    first_name = forms.CharField(max_length=30, required=False)
    last_name = forms.CharField(max_length=30, required=False)
    
    class Meta:
        model = User
        fields = ('username', 'email', 'first_name', 'last_name', 'password1', 'password2')
    
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # Add Bootstrap classes to form fields
        for field_name, field in self.fields.items():
            field.widget.attrs['class'] = 'form-control'
            
        # Add placeholders
        self.fields['username'].widget.attrs['placeholder'] = 'Enter username'
        self.fields['email'].widget.attrs['placeholder'] = 'Enter email address'
        self.fields['first_name'].widget.attrs['placeholder'] = 'Enter first name (optional)'
        self.fields['last_name'].widget.attrs['placeholder'] = 'Enter last name (optional)'
        self.fields['password1'].widget.attrs['placeholder'] = 'Enter password'
        self.fields['password2'].widget.attrs['placeholder'] = 'Confirm password'
    
    def clean_email(self):
        email = self.cleaned_data.get('email')
        if User.objects.filter(email=email).exists():
            raise ValidationError("A user with this email already exists.")
        return email
    
    def save(self, commit=True):
        user = super().save(commit=False)
        user.email = self.cleaned_data['email']
        user.first_name = self.cleaned_data['first_name']
        user.last_name = self.cleaned_data['last_name']
        if commit:
            user.save()
        return user

class CustomLoginForm(forms.Form):
    username = forms.CharField(
        max_length=150,
        widget=forms.TextInput(attrs={
            'class': 'form-control',
            'placeholder': 'Enter username'
        })
    )
    password = forms.CharField(
        widget=forms.PasswordInput(attrs={
            'class': 'form-control',
            'placeholder': 'Enter password'
        })
    )

# ============================================================================
# accounts/views.py
from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from django.urls import reverse
from django.http import HttpResponse
from .forms import CustomUserCreationForm, CustomLoginForm
from .models import UserProfile

def register_view(request):
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            # Create user profile with verification token
            profile = UserProfile.objects.create(user=user)
            
            # Simulate email verification (console backend)
            verification_url = request.build_absolute_uri(
                reverse('verify_email', kwargs={'token': profile.verification_token})
            )
            print(f"Verification URL: {verification_url}")
            
            messages.success(request, 'Registration successful! Please check your email for verification.')
            return redirect('login')
    else:
        form = CustomUserCreationForm()
    
    return render(request, 'accounts/register.html', {'form': form})

def login_view(request):
    if request.method == 'POST':
        form = CustomLoginForm(request.POST)
        if form.is_valid():
            username = form.cleaned_data['username']
            password = form.cleaned_data['password']
            user = authenticate(request, username=username, password=password)
            
            if user is not None:
                login(request, user)
                messages.success(request, f'Welcome back, {user.username}!')
                return redirect('dashboard')
            else:
                messages.error(request, 'Invalid username or password.')
    else:
        form = CustomLoginForm()
    
    return render(request, 'accounts/login.html', {'form': form})

def logout_view(request):
    logout(request)
    messages.info(request, 'You have been logged out successfully.')
    return redirect('login')

@login_required
def dashboard_view(request):
    user_profile, created = UserProfile.objects.get_or_create(user=request.user)
    return render(request, 'accounts/dashboard.html', {
        'user_profile': user_profile
    })

def verify_email(request, token):
    try:
        profile = UserProfile.objects.get(verification_token=token)
        profile.email_verified = True
        profile.save()
        messages.success(request, 'Account Verified Successfully!')
        return render(request, 'accounts/verify.html', {'success': True})
    except UserProfile.DoesNotExist:
        messages.error(request, 'Invalid verification token.')
        return render(request, 'accounts/verify.html', {'success': False})

# ============================================================================
# accounts/urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.login_view, name='login'),
    path('register/', views.register_view, name='register'),
    path('login/', views.login_view, name='login'),
    path('logout/', views.logout_view, name='logout'),
    path('dashboard/', views.dashboard_view, name='dashboard'),
    path('verify/<str:token>/', views.verify_email, name='verify_email'),
]
<!-- accounts/templates/accounts/base.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}YouTube Clone{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .navbar-brand {
            font-weight: bold;
            color: #ff0000 !important;
        }
        .btn-youtube {
            background-color: #ff0000;
            border-color: #ff0000;
            color: white;
        }
        .btn-youtube:hover {
            background-color: #cc0000;
            border-color: #cc0000;
            color: white;
        }
        .card {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .form-container {
            max-width: 500px;
            margin: 0 auto;
        }
        .dashboard-card {
            transition: transform 0.2s;
        }
        .dashboard-card:hover {
            transform: translateY(-5px);
        }
    </style>
</head>
<body class="bg-light">
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-white border-bottom">
        <div class="container">
            <a class="navbar-brand" href="{% url 'dashboard' %}">
                <i class="fab fa-youtube"></i> YouTube Clone
            </a>
            
            <div class="navbar-nav ms-auto">
                {% if user.is_authenticated %}
                    <div class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                            <i class="fas fa-user"></i> {{ user.username }}
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="{% url 'dashboard' %}">Dashboard</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="{% url 'logout' %}">Logout</a></li>
                        </ul>
                    </div>
                {% else %}
                    <a class="nav-link text-dark" href="{% url 'login' %}">Login</a>
                    <a class="nav-link text-dark" href="{% url 'register' %}">Register</a>
                {% endif %}
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container mt-4">
        <!-- Messages -->
        {% if messages %}
            {% for message in messages %}
                <div class="alert alert-{% if message.tags == 'error' %}danger{% else %}{{ message.tags }}{% endif %} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            {% endfor %}
        {% endif %}

        {% block content %}
        {% endblock %}
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<!-- ============================================================================ -->
<!-- accounts/templates/accounts/register.html -->
{% extends 'accounts/base.html' %}

{% block title %}Register - YouTube Clone{% endblock %}

{% block content %}
<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-youtube text-white">
                <h3 class="card-title mb-0">
                    <i class="fas fa-user-plus"></i> Create Account
                </h3>
            </div>
            <div class="card-body">
                <form method="post">
                    {% csrf_token %}
                    
                    <div class="mb-3">
                        <label for="{{ form.username.id_for_label }}" class="form-label">Username</label>
                        {{ form.username }}
                        {% if form.username.errors %}
                            <div class="text-danger small">{{ form.username.errors }}</div>
                        {% endif %}
                    </div>

                    <div class="mb-3">
                        <label for="{{ form.email.id_for_label }}" class="form-label">Email</label>
                        {{ form.email }}
                        {% if form.email.errors %}
                            <div class="text-danger small">{{ form.email.errors }}</div>
                        {% endif %}
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="{{ form.first_name.id_for_label }}" class="form-label">First Name</label>
                                {{ form.first_name }}
                                {% if form.first_name.errors %}
                                    <div class="text-danger small">{{ form.first_name.errors }}</div>
                                {% endif %}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="{{ form.last_name.id_for_label }}" class="form-label">Last Name</label>
                                {{ form.last_name }}
                                {% if form.last_name.errors %}
                                    <div class="text-danger small">{{ form.last_name.errors }}</div>
                                {% endif %}
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="{{ form.password1.id_for_label }}" class="form-label">Password</label>
                        {{ form.password1 }}
                        {% if form.password1.errors %}
                            <div class="text-danger small">{{ form.password1.errors }}</div>
                        {% endif %}
                    </div>

                    <div class="mb-3">
                        <label for="{{ form.password2.id_for_label }}" class="form-label">Confirm Password</label>
                        {{ form.password2 }}
                        {% if form.password2.errors %}
                            <div class="text-danger small">{{ form.password2.errors }}</div>
                        {% endif %}
                    </div>

                    <button type="submit" class="btn btn-youtube w-100">
                        <i class="fas fa-user-plus"></i> Create Account
                    </button>
                </form>
            </div>
            <div class="card-footer text-center">
                <p class="mb-0">Already have an account? <a href="{% url 'login' %}">Login here</a></p>
            </div>
        </div>
    </div>
</div>
{% endblock %}

<!-- ============================================================================ -->
<!-- accounts/templates/accounts/login.html -->
{% extends 'accounts/base.html' %}

{% block title %}Login - YouTube Clone{% endblock %}

{% block content %}
<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-youtube text-white">
                <h3 class="card-title mb-0">
                    <i class="fas fa-sign-in-alt"></i> Login
                </h3>
            </div>
            <div class="card-body">
                <form method="post">
                    {% csrf_token %}
                    
                    <div class="mb-3">
                        <label for="{{ form.username.id_for_label }}" class="form-label">Username</label>
                        {{ form.username }}
                        {% if form.username.errors %}
                            <div class="text-danger small">{{ form.username.errors }}</div>
                        {% endif %}
                    </div>

                    <div class="mb-3">
                        <label for="{{ form.password.id_for_label }}" class="form-label">Password</label>
                        {{ form.password }}
                        {% if form.password.errors %}
                            <div class="text-danger small">{{ form.password.errors }}</div>
                        {% endif %}
                    </div>

                    <button type="submit" class="btn btn-youtube w-100">
                        <i class="fas fa-sign-in-alt"></i> Login
                    </button>
                </form>
            </div>
            <div class="card-footer text-center">
                <p class="mb-0">Don't have an account? <a href="{% url 'register' %}">Register here</a></p>
            </div>
        </div>
    </div>
</div>
{% endblock %}

<!-- ============================================================================ -->
<!-- accounts/templates/accounts/dashboard.html -->
{% extends 'accounts/base.html' %}

{% block title %}Dashboard - YouTube Clone{% endblock %}

{% block content %}
<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Welcome, {{ user.first_name|default:user.username }}!</h1>
            <div class="text-muted">
                <i class="fas fa-clock"></i> Last login: {{ user.last_login|date:"M d, Y H:i" }}
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- User Profile Card -->
    <div class="col-md-4">
        <div class="card dashboard-card mb-4">
            <div class="card-header bg-primary text-white">
                <i class="fas fa-user"></i> Profile Information
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-4">
                        <div class="text-center">
                            <i class="fas fa-user-circle fa-4x text-secondary"></i>
                        </div>
                    </div>
                    <div class="col-8">
                        <p><strong>Username:</strong> {{ user.username }}</p>
                        <p><strong>Email:</strong> {{ user.email }}</p>
                        <p><strong>Name:</strong> {{ user.get_full_name|default:"Not provided" }}</p>
                        <p><strong>Joined:</strong> {{ user.date_joined|date:"M d, Y" }}</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Email Verification Status -->
    <div class="col-md-4">
        <div class="card dashboard-card mb-4">
            <div class="card-header {% if user_profile.email_verified %}bg-success{% else %}bg-warning{% endif %} text-white">
                <i class="fas fa-envelope"></i> Email Verification
            </div>
            <div class="card-body">
                {% if user_profile.email_verified %}
                    <div class="text-success">
                        <i class="fas fa-check-circle fa-2x"></i>
                        <p class="mt-2">Your email has been verified!</p>
                    </div>
                {% else %}
                    <div class="text-warning">
                        <i class="fas fa-exclamation-triangle fa-2x"></i>
                        <p class="mt-2">Email verification pending</p>
                        <small class="text-muted">Check your email for verification link</small>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="col-md-4">
        <div class="card dashboard-card mb-4">
            <div class="card-header bg-info text-white">
                <i class="fas fa-bolt"></i> Quick Actions
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button class="btn btn-outline-primary" disabled>
                        <i class="fas fa-upload"></i> Upload Video
                        <small class="d-block text-muted">Coming Soon</small>
                    </button>
                    <button class="btn btn-outline-success" disabled>
                        <i class="fas fa-list"></i> My Videos
                        <small class="d-block text-muted">Coming Soon</small>
                    </button>
                    <button class="btn btn-outline-info" disabled>
                        <i class="fas fa-cog"></i> Settings
                        <small class="d-block text-muted">Coming Soon</small>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Statistics Row -->
<div class="row">
    <div class="col-md-3">
        <div class="card text-center dashboard-card">
            <div class="card-body">
                <i class="fas fa-video fa-2x text-primary mb-2"></i>
                <h4>0</h4>
                <p class="text-muted">Videos Uploaded</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center dashboard-card">
            <div class="card-body">
                <i class="fas fa-eye fa-2x text-success mb-2"></i>
                <h4>0</h4>
                <p class="text-muted">Total Views</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center dashboard-card">
            <div class="card-body">
                <i class="fas fa-thumbs-up fa-2x text-info mb-2"></i>
                <h4>0</h4>
                <p class="text-muted">Total Likes</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center dashboard-card">
            <div class="card-body">
                <i class="fas fa-users fa-2x text-warning mb-2"></i>
                <h4>0</h4>
                <p class="text-muted">Subscribers</p>
            </div>
        </div>
    </div>
</div>
{% endblock %}

<!-- ============================================================================ -->
<!-- accounts/templates/accounts/verify.html -->
{% extends 'accounts/base.html' %}

{% block title %}Email Verification - YouTube Clone{% endblock %}

{% block content %}
<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header {% if success %}bg-success{% else %}bg-danger{% endif %} text-white">
                <h3 class="card-title mb-0">
                    <i class="fas {% if success %}fa-check-circle{% else %}fa-times-circle{% endif %}"></i> 
                    Email Verification
                </h3>
            </div>
            <div class="card-body text-center">
                {% if success %}
                    <div class="text-success">
                        <i class="fas fa-check-circle fa-4x mb-3"></i>
                        <h4>Account Verified Successfully!</h4>
                        <p class="text-muted">Your email has been verified and your account is now active.</p>
                    </div>
                {% else %}
                    <div class="text-danger">
                        <i class="fas fa-times-circle fa-4x mb-3"></i>
                        <h4>Verification Failed</h4>
                        <p class="text-muted">The verification link is invalid or has expired.</p>
                    </div>
                {% endif %}
            </div>
            <div class="card-footer text-center">
                <a href="{% url 'login' %}" class="btn btn-youtube">
                    <i class="fas fa-sign-in-alt"></i> Go to Login
                </a>
            </div>
        </div>
    </div>
</div>
{% endblock %}
